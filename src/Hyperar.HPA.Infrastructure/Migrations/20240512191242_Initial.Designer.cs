// <auto-generated />
using System;
using Hyperar.HPA.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hyperar.HPA.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240512191242_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hyperar.HPA.Domain.Country", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(4);

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<decimal>("CurrencyRate")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal")
                        .HasColumnOrder(3);

                    b.Property<string>("DateFormat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(5);

                    b.Property<long>("LeagueHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<string>("TimeFormat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(6);

                    b.HasKey("HattrickId");

                    b.HasIndex("LeagueHattrickId")
                        .IsUnique();

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.League", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<int>("ActiveTeams")
                        .HasColumnType("int")
                        .HasColumnOrder(13);

                    b.Property<int>("ActiveUsers")
                        .HasColumnType("int")
                        .HasColumnOrder(14);

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(4);

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.Property<byte[]>("FlagBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(21);

                    b.Property<long>("JuniorNationalTeamId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(12);

                    b.Property<long>("LanguageId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(9);

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("NextCupMatchDate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(19);

                    b.Property<DateTime>("NextEconomyUpdate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(18);

                    b.Property<DateTime>("NextSeriesMatchDate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(20);

                    b.Property<DateTime>("NextTrainingUpdate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(17);

                    b.Property<byte>("NumberOfLevels")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(16);

                    b.Property<byte>("Season")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(6);

                    b.Property<short>("SeasonOffset")
                        .HasColumnType("smallint")
                        .HasColumnOrder(8);

                    b.Property<long>("SeniorNationalTeamId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(11);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<int>("WaitingUsers")
                        .HasColumnType("int")
                        .HasColumnOrder(15);

                    b.Property<byte>("Week")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(7);

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(5);

                    b.HasKey("HattrickId");

                    b.ToTable("League", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.LeagueCup", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<byte>("CurrentRound")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(5);

                    b.Property<long>("LeagueHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<byte>("RoundsLeft")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(6);

                    b.Property<byte?>("SeriesLevel")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(4);

                    b.Property<byte?>("SubType")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(3);

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(2);

                    b.HasKey("HattrickId");

                    b.HasIndex("LeagueHattrickId");

                    b.ToTable("LeagueCup", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Manager", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<byte[]>("AvatarBytes")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(5);

                    b.Property<long>("CountryHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.Property<decimal>("CurrencyRate")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal")
                        .HasColumnOrder(4);

                    b.Property<byte>("SupporterTier")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(2);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.HasKey("HattrickId");

                    b.HasIndex("CountryHattrickId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Manager", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Region", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<long>("CountryHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.HasKey("HattrickId");

                    b.HasIndex("CountryHattrickId");

                    b.ToTable("Region", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.HallOfFamePlayer", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<byte>("Age")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(4);

                    b.Property<long>("CountryHattrickId")
                        .HasColumnType("bigint");

                    b.Property<byte>("ExpertType")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(8);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("IntroducedOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("JoinedTeamOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(5);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("NextBirthday")
                        .HasColumnType("datetime")
                        .HasColumnOrder(6);

                    b.Property<string>("NickName")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<long>("TeamHattrickId")
                        .HasColumnType("bigint");

                    b.HasKey("HattrickId");

                    b.HasIndex("CountryHattrickId");

                    b.HasIndex("TeamHattrickId");

                    b.ToTable("HallOfFamePlayer", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.Match", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<byte?>("AddedMinutes")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(7);

                    b.Property<long?>("CompetitionId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(6);

                    b.Property<byte?>("Result")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(9);

                    b.Property<byte>("Rules")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(5);

                    b.Property<byte>("System")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    b.Property<long>("TeamHattrickId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(2);

                    b.Property<byte?>("Weather")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(8);

                    b.HasKey("HattrickId");

                    b.HasIndex("TeamHattrickId");

                    b.ToTable("Match", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchArena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Attendance")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int?>("BasicSeatsSold")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<long>("MatchHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<int?>("RoofSeatsSold")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<int?>("TerracesSold")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int?>("VipSeatsSold")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("MatchHattrickId")
                        .IsUnique();

                    b.ToTable("MatchArena", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("AdditionalPlayerHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(3);

                    b.Property<byte>("Index")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    b.Property<long>("MatchHattrickId")
                        .HasColumnType("bigint");

                    b.Property<byte>("MatchPart")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(9);

                    b.Property<byte>("Minute")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(8);

                    b.Property<long?>("PlayerHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TeamHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(4);

                    b.Property<string>("Text")
                        .HasColumnType("ntext")
                        .HasColumnOrder(7);

                    b.Property<short>("Type")
                        .HasColumnType("smallint")
                        .HasColumnOrder(5);

                    b.Property<short>("Variation")
                        .HasColumnType("smallint")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("MatchHattrickId");

                    b.ToTable("MatchEvent", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchOfficial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CountryHattrickId")
                        .HasColumnType("bigint");

                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<long>("MatchHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CountryHattrickId");

                    b.HasIndex("MatchHattrickId");

                    b.ToTable("MatchOfficial", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte?>("AttackIndirectSetPiecesRating")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(18);

                    b.Property<short?>("Attitude")
                        .HasColumnType("smallint")
                        .HasColumnOrder(19);

                    b.Property<byte?>("CentralAttackRating")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(15);

                    b.Property<byte?>("CentralDefenseRating")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(12);

                    b.Property<byte?>("ChancesOnCenter")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(21);

                    b.Property<byte?>("ChancesOnLeft")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(22);

                    b.Property<byte?>("ChancesOnRight")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(20);

                    b.Property<byte?>("DefenseIndirectSetPiecesRating")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(17);

                    b.Property<byte?>("FirstHalfPosession")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(25);

                    b.Property<string>("Formation")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(6);

                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<byte?>("LeftAttackRating")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(16);

                    b.Property<byte?>("LeftDefenseRating")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(13);

                    b.Property<byte>("Location")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(3);

                    b.Property<long>("MatchHattrickId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("MatchKitBytes")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(5);

                    b.Property<string>("MatchKitUrl")
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(4);

                    b.Property<byte?>("MidfieldRating")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<byte?>("OtherChances")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(24);

                    b.Property<byte?>("RightAttackRating")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(14);

                    b.Property<byte?>("RightDefenseRating")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(11);

                    b.Property<byte?>("Score")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(7);

                    b.Property<byte?>("SecondHalfPosession")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(26);

                    b.Property<byte?>("SpecialEventChances")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(23);

                    b.Property<byte?>("TacticLevel")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(9);

                    b.Property<byte?>("TacticType")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("MatchHattrickId");

                    b.ToTable("MatchTeam", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Index")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    b.Property<byte>("MatchPart")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(6);

                    b.Property<int>("MatchTeamId")
                        .HasColumnType("int");

                    b.Property<byte>("Minute")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(5);

                    b.Property<long>("PlayerHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("MatchTeamId");

                    b.ToTable("MatchTeamBooking", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("AwayTeamScore")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(5);

                    b.Property<byte>("HomeTeamScore")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(4);

                    b.Property<byte>("Index")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    b.Property<byte>("MatchPart")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(7);

                    b.Property<int>("MatchTeamId")
                        .HasColumnType("int");

                    b.Property<byte>("Minute")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(6);

                    b.Property<long>("PlayerHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("MatchTeamId");

                    b.ToTable("MatchTeamGoal", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamInjury", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Index")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    b.Property<byte>("MatchPart")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(6);

                    b.Property<int>("MatchTeamId")
                        .HasColumnType("int");

                    b.Property<byte>("Minute")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(5);

                    b.Property<long>("PlayerHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("MatchTeamId");

                    b.ToTable("MatchTeamInjury", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamLineUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Experience")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    b.Property<int>("MatchTeamId")
                        .HasColumnType("int");

                    b.Property<short>("Style")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("MatchTeamId")
                        .IsUnique();

                    b.ToTable("MatchTeamLineUp", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamLineUpPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short?>("Behavior")
                        .HasColumnType("smallint")
                        .HasColumnOrder(6);

                    b.Property<decimal?>("EndRating")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal")
                        .HasColumnOrder(8);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(4);

                    b.Property<int>("MatchTeamLineUpId")
                        .HasColumnType("int");

                    b.Property<string>("NickName")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.Property<decimal?>("Rating")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal")
                        .HasColumnOrder(7);

                    b.Property<short>("Role")
                        .HasColumnType("smallint")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("MatchTeamLineUpId");

                    b.ToTable("MatchTeamLineUpPlayer", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamLineUpStartingPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short?>("Behavior")
                        .HasColumnType("smallint")
                        .HasColumnOrder(6);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(4);

                    b.Property<int>("MatchTeamLineUpId")
                        .HasColumnType("int");

                    b.Property<string>("NickName")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.Property<short>("Role")
                        .HasColumnType("smallint")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("MatchTeamLineUpId");

                    b.ToTable("MatchTeamLineUpStartingPlayer", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamLineUpSubstitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("InPlayerHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(6);

                    b.Property<byte>("MatchPart")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(5);

                    b.Property<int>("MatchTeamLineUpId")
                        .HasColumnType("int");

                    b.Property<byte>("Minute")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(4);

                    b.Property<short>("NewRole")
                        .HasColumnType("smallint")
                        .HasColumnOrder(2);

                    b.Property<short>("NewRoleBehavior")
                        .HasColumnType("smallint")
                        .HasColumnOrder(3);

                    b.Property<byte>("OrderType")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    b.Property<long>("OutPlayerHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("MatchTeamLineUpId");

                    b.ToTable("MatchTeamLineUpSubstitution", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.Player", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<byte>("AgeDays")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(7);

                    b.Property<byte>("AgeYears")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(6);

                    b.Property<byte>("Aggressiveness")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(16);

                    b.Property<byte>("Agreeability")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(15);

                    b.Property<byte[]>("AvatarBytes")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(34);

                    b.Property<byte>("BookingStatus")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(31);

                    b.Property<short>("CareerGoals")
                        .HasColumnType("smallint")
                        .HasColumnOrder(25);

                    b.Property<short>("CareerHattricks")
                        .HasColumnType("smallint")
                        .HasColumnOrder(26);

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(33);

                    b.Property<long>("CountryHattrickId")
                        .HasColumnType("bigint");

                    b.Property<short>("CurrentSeasonCupGoals")
                        .HasColumnType("smallint")
                        .HasColumnOrder(23);

                    b.Property<short>("CurrentSeasonFriendlyGoals")
                        .HasColumnType("smallint")
                        .HasColumnOrder(24);

                    b.Property<short>("CurrentSeasonLeagueGoals")
                        .HasColumnType("smallint")
                        .HasColumnOrder(22);

                    b.Property<bool>("EnrolledOnNationalTeam")
                        .HasColumnType("bit")
                        .HasColumnOrder(21);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<short>("GoalsOnTeam")
                        .HasColumnType("smallint")
                        .HasColumnOrder(27);

                    b.Property<bool>("HasMotherClubBonus")
                        .HasColumnType("bit")
                        .HasColumnOrder(12);

                    b.Property<short>("Health")
                        .HasColumnType("smallint")
                        .HasColumnOrder(32);

                    b.Property<byte>("Honesty")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(17);

                    b.Property<bool>("IsCoach")
                        .HasColumnType("bit")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsForeign")
                        .HasColumnType("bit")
                        .HasColumnOrder(14);

                    b.Property<bool>("IsTransferListed")
                        .HasColumnType("bit")
                        .HasColumnOrder(20);

                    b.Property<DateTime>("JoinedTeamOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(8);

                    b.Property<short>("JuniorNationalTeamCaps")
                        .HasColumnType("smallint")
                        .HasColumnOrder(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.Property<byte>("Leadership")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(18);

                    b.Property<short>("MatchesOnTeam")
                        .HasColumnType("smallint")
                        .HasColumnOrder(28);

                    b.Property<string>("NickName")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<string>("Notes")
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(9);

                    b.Property<long>("Salary")
                        .HasColumnType("bigint")
                        .HasColumnOrder(13);

                    b.Property<short>("SeniorNationalTeamCaps")
                        .HasColumnType("smallint")
                        .HasColumnOrder(29);

                    b.Property<byte?>("ShirtNumber")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(4);

                    b.Property<byte>("Specialty")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(19);

                    b.Property<string>("Statement")
                        .HasMaxLength(1024)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(10);

                    b.Property<long>("TeamHattrickId")
                        .HasColumnType("bigint");

                    b.Property<int>("TotalSkillIndex")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.HasKey("HattrickId");

                    b.HasIndex("CountryHattrickId");

                    b.HasIndex("TeamHattrickId");

                    b.ToTable("Player", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.PlayerSkillSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("Defending")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(6);

                    b.Property<byte>("Experience")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(13);

                    b.Property<byte>("Form")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(3);

                    b.Property<byte>("Keeper")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(5);

                    b.Property<byte>("Loyalty")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(12);

                    b.Property<byte>("Passing")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(9);

                    b.Property<long>("PlayerHattrickId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Playmaking")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(7);

                    b.Property<byte>("Scoring")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(10);

                    b.Property<short>("Season")
                        .HasColumnType("smallint")
                        .HasColumnOrder(1);

                    b.Property<byte>("SetPieces")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(11);

                    b.Property<byte>("Stamina")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(4);

                    b.Property<byte>("Week")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(2);

                    b.Property<byte>("Winger")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.HasIndex("PlayerHattrickId");

                    b.ToTable("PlayerSkillSet", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.StaffMember", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<byte[]>("AvatarBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(6);

                    b.Property<long?>("HallOfFamePlayerHattrickId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("HiredOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(2);

                    b.Property<byte>("Level")
                        .IsUnicode(true)
                        .HasColumnType("tinyint")
                        .HasColumnOrder(4);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<long>("Salary")
                        .HasColumnType("bigint")
                        .HasColumnOrder(5);

                    b.Property<long>("TeamHattrickId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(3);

                    b.HasKey("HattrickId");

                    b.HasIndex("HallOfFamePlayerHattrickId")
                        .IsUnique()
                        .HasFilter("[HallOfFamePlayerHattrickId] IS NOT NULL");

                    b.HasIndex("TeamHattrickId");

                    b.ToTable("StaffMember", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.Team", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<byte[]>("AwayMatchKitBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(19);

                    b.Property<long>("CoachPlayerId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("FoundedOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(4);

                    b.Property<int>("GlobalRanking")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<byte[]>("HomeMatchKitBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(18);

                    b.Property<bool>("IsPlayingCup")
                        .HasColumnType("bit")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit")
                        .HasColumnOrder(3);

                    b.Property<long>("LeagueHattrickId")
                        .HasColumnType("bigint");

                    b.Property<int>("LeagueRanking")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.Property<byte[]>("LogoBytes")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(17);

                    b.Property<long>("ManagerHattrickId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<int>("PowerRanking")
                        .HasColumnType("int")
                        .HasColumnOrder(10);

                    b.Property<long>("RegionHattrickId")
                        .HasColumnType("bigint");

                    b.Property<int>("RegionRanking")
                        .HasColumnType("int")
                        .HasColumnOrder(9);

                    b.Property<byte>("SeriesDivision")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(16);

                    b.Property<long>("SeriesHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(14);

                    b.Property<string>("SeriesName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(15);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.Property<int>("TeamRank")
                        .HasColumnType("int")
                        .HasColumnOrder(11);

                    b.Property<short>("UndefeatedStreak")
                        .HasColumnType("smallint")
                        .HasColumnOrder(12);

                    b.Property<short>("WinStreak")
                        .HasColumnType("smallint")
                        .HasColumnOrder(13);

                    b.HasKey("HattrickId");

                    b.HasIndex("LeagueHattrickId");

                    b.HasIndex("ManagerHattrickId");

                    b.HasIndex("RegionHattrickId");

                    b.ToTable("Team", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.TeamArena", b =>
                {
                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<int>("BasicSeatCapacity")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("BuiltOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("ImageBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(8);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(1);

                    b.Property<int>("RoofSeatCapacity")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<long>("TeamHattrickId")
                        .HasColumnType("bigint");

                    b.Property<int>("TerracesCapacity")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int>("TotalCapacity")
                        .HasColumnType("int")
                        .HasColumnOrder(7);

                    b.Property<int>("VipLoungeCapacity")
                        .HasColumnType("int")
                        .HasColumnOrder(6);

                    b.HasKey("HattrickId");

                    b.HasIndex("TeamHattrickId")
                        .IsUnique();

                    b.ToTable("TeamArena", "senior");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("ExpiresOn")
                        .HasColumnType("datetime")
                        .HasColumnOrder(5);

                    b.Property<byte>("Scope")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(1);

                    b.Property<string>("SecretValue")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(3);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Token", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("LastDownloadDate")
                        .HasColumnType("datetime")
                        .HasColumnOrder(1);

                    b.Property<long?>("LastSelectedTeamHattrickId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Country", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.League", "League")
                        .WithOne("Country")
                        .HasForeignKey("Hyperar.HPA.Domain.Country", "LeagueHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Country_League");

                    b.Navigation("League");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.LeagueCup", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.League", "League")
                        .WithMany("Cups")
                        .HasForeignKey("LeagueHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_LeagueCup_League");

                    b.Navigation("League");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Manager", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Country", "Country")
                        .WithMany("Managers")
                        .HasForeignKey("CountryHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Manager_Country");

                    b.HasOne("Hyperar.HPA.Domain.User", "User")
                        .WithOne("Manager")
                        .HasForeignKey("Hyperar.HPA.Domain.Manager", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Manager_User");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Region", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Region_Country");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.HallOfFamePlayer", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Country", "Country")
                        .WithMany("HallOfFamePlayers")
                        .HasForeignKey("CountryHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_HallOfFamePlayer_Country");

                    b.HasOne("Hyperar.HPA.Domain.Senior.Team", "Team")
                        .WithMany("HallOfFamePlayers")
                        .HasForeignKey("TeamHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_HallOfFamePlayer_Team");

                    b.Navigation("Country");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.Match", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.Team", "Team")
                        .WithMany("Matches")
                        .HasForeignKey("TeamHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_Match_Team");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchArena", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.Match", "Match")
                        .WithOne("Arena")
                        .HasForeignKey("Hyperar.HPA.Domain.Senior.MatchArena", "MatchHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchArena_Match");

                    b.Navigation("Match");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchEvent", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.Match", "Match")
                        .WithMany("Events")
                        .HasForeignKey("MatchHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchEvent_Match");

                    b.Navigation("Match");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchOfficial", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Country", "Country")
                        .WithMany("MatchOfficials")
                        .HasForeignKey("CountryHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchOfficial_Country");

                    b.HasOne("Hyperar.HPA.Domain.Senior.Match", "Match")
                        .WithMany("Officials")
                        .HasForeignKey("MatchHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchOfficial_Match");

                    b.Navigation("Country");

                    b.Navigation("Match");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeam", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.Match", "Match")
                        .WithMany("Teams")
                        .HasForeignKey("MatchHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchTeam_Match");

                    b.Navigation("Match");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamBooking", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.MatchTeam", "MatchTeam")
                        .WithMany("Bookings")
                        .HasForeignKey("MatchTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchTeamBooking_MatchTeam");

                    b.Navigation("MatchTeam");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamGoal", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.MatchTeam", "MatchTeam")
                        .WithMany("Goals")
                        .HasForeignKey("MatchTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchTeamGoal_MatchTeam");

                    b.Navigation("MatchTeam");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamInjury", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.MatchTeam", "MatchTeam")
                        .WithMany("Injuries")
                        .HasForeignKey("MatchTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchTeamInjury_MatchTeam");

                    b.Navigation("MatchTeam");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamLineUp", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.MatchTeam", "MatchTeam")
                        .WithOne("LineUp")
                        .HasForeignKey("Hyperar.HPA.Domain.Senior.MatchTeamLineUp", "MatchTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchTeamLineUp_MatchTeam");

                    b.Navigation("MatchTeam");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamLineUpPlayer", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.MatchTeamLineUp", "MatchTeamLineUp")
                        .WithMany("Players")
                        .HasForeignKey("MatchTeamLineUpId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchTeamLineUpPlayer_MatchTeamLineUp");

                    b.Navigation("MatchTeamLineUp");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamLineUpStartingPlayer", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.MatchTeamLineUp", "MatchTeamLineUp")
                        .WithMany("StartingPlayers")
                        .HasForeignKey("MatchTeamLineUpId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchTeamLineUpStartingPlayer_MatchTeamLineUp");

                    b.Navigation("MatchTeamLineUp");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamLineUpSubstitution", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.MatchTeamLineUp", "MatchTeamLineUp")
                        .WithMany("Substitutions")
                        .HasForeignKey("MatchTeamLineUpId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_MatchTeamLineUpSubstitution_MatchTeamLineUp");

                    b.Navigation("MatchTeamLineUp");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.Player", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Country", "Country")
                        .WithMany("Players")
                        .HasForeignKey("CountryHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_Player_Country");

                    b.HasOne("Hyperar.HPA.Domain.Senior.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_Player_Team");

                    b.Navigation("Country");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.PlayerSkillSet", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.Player", "Player")
                        .WithMany("PlayerSkillSets")
                        .HasForeignKey("PlayerHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_PlayerSkillSet_Player");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.StaffMember", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.HallOfFamePlayer", "HallOfFamePlayer")
                        .WithOne("Staff")
                        .HasForeignKey("Hyperar.HPA.Domain.Senior.StaffMember", "HallOfFamePlayerHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_StaffMember_HallOfFamePlayer");

                    b.HasOne("Hyperar.HPA.Domain.Senior.Team", "Team")
                        .WithMany("StaffMembers")
                        .HasForeignKey("TeamHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_StaffMember_Team");

                    b.Navigation("HallOfFamePlayer");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.Team", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.League", "League")
                        .WithMany("Teams")
                        .HasForeignKey("LeagueHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_Team_League");

                    b.HasOne("Hyperar.HPA.Domain.Manager", "Manager")
                        .WithMany("Teams")
                        .HasForeignKey("ManagerHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_Team_Manager");

                    b.HasOne("Hyperar.HPA.Domain.Region", "Region")
                        .WithMany("Teams")
                        .HasForeignKey("RegionHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_Team_Region");

                    b.Navigation("League");

                    b.Navigation("Manager");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.TeamArena", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Senior.Team", "Team")
                        .WithOne("TeamArena")
                        .HasForeignKey("Hyperar.HPA.Domain.Senior.TeamArena", "TeamHattrickId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Senior_TeamArena_Team");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Token", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.User", "User")
                        .WithOne("Token")
                        .HasForeignKey("Hyperar.HPA.Domain.Token", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Token_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Country", b =>
                {
                    b.Navigation("HallOfFamePlayers");

                    b.Navigation("Managers");

                    b.Navigation("MatchOfficials");

                    b.Navigation("Players");

                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.League", b =>
                {
                    b.Navigation("Country");

                    b.Navigation("Cups");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Manager", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Region", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.HallOfFamePlayer", b =>
                {
                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.Match", b =>
                {
                    b.Navigation("Arena");

                    b.Navigation("Events");

                    b.Navigation("Officials");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeam", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Goals");

                    b.Navigation("Injuries");

                    b.Navigation("LineUp");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.MatchTeamLineUp", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("StartingPlayers");

                    b.Navigation("Substitutions");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.Player", b =>
                {
                    b.Navigation("PlayerSkillSets");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Senior.Team", b =>
                {
                    b.Navigation("HallOfFamePlayers");

                    b.Navigation("Matches");

                    b.Navigation("Players");

                    b.Navigation("StaffMembers");

                    b.Navigation("TeamArena");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.User", b =>
                {
                    b.Navigation("Manager");

                    b.Navigation("Token");
                });
#pragma warning restore 612, 618
        }
    }
}
