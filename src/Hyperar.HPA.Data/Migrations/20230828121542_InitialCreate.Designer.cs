// <auto-generated />
using System;
using Hyperar.HPA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hyperar.HPA.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230828121542_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Code")
                        .HasColumnOrder(5);

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CurrencyName")
                        .HasColumnOrder(3);

                    b.Property<decimal>("CurrencyRate")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal")
                        .HasColumnName("CurrencyRate")
                        .HasColumnOrder(4);

                    b.Property<string>("DateFormat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("DateFormat")
                        .HasColumnOrder(6);

                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnName("HattrickId")
                        .HasColumnOrder(1);

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.Property<string>("TimeFormat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("TimeFormat")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("LeagueId")
                        .IsUnique();

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("ActiveTeams")
                        .HasColumnType("bigint")
                        .HasColumnName("ActiveTeams")
                        .HasColumnOrder(14);

                    b.Property<long>("ActiveUsers")
                        .HasColumnType("bigint")
                        .HasColumnName("ActiveUsers")
                        .HasColumnOrder(15);

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Continent")
                        .HasColumnOrder(5);

                    b.Property<long>("CurrentRound")
                        .HasColumnType("bigint")
                        .HasColumnName("CurrentRound")
                        .HasColumnOrder(9);

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("EnglishName")
                        .HasColumnOrder(4);

                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnName("HattrickId")
                        .HasColumnOrder(1);

                    b.Property<long>("JuniorNationalTeamId")
                        .HasColumnType("bigint")
                        .HasColumnName("JuniorNationalTeamId")
                        .HasColumnOrder(13);

                    b.Property<long>("LanguageId")
                        .HasColumnType("bigint")
                        .HasColumnName("LanguageId")
                        .HasColumnOrder(10);

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("LanguageName")
                        .HasColumnOrder(11);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.Property<long>("NumberOfLevels")
                        .HasColumnType("bigint")
                        .HasColumnName("NumberOfLevels")
                        .HasColumnOrder(17);

                    b.Property<long>("Season")
                        .HasColumnType("bigint")
                        .HasColumnName("Season")
                        .HasColumnOrder(7);

                    b.Property<int>("SeasonOffset")
                        .HasColumnType("int")
                        .HasColumnName("SeasonOffset")
                        .HasColumnOrder(8);

                    b.Property<long>("SeniorNationalTeamId")
                        .HasColumnType("bigint")
                        .HasColumnName("SeniorNationalTeamId")
                        .HasColumnOrder(12);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("ShortName")
                        .HasColumnOrder(3);

                    b.Property<long>("WaitingUsers")
                        .HasColumnType("bigint")
                        .HasColumnName("WaitingUsers")
                        .HasColumnOrder(16);

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Zone")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.ToTable("League", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.LeagueCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FifthWeeklyUpdate")
                        .HasColumnType("date")
                        .HasColumnName("FifthWeeklyUpdate")
                        .HasColumnOrder(9);

                    b.Property<DateTime>("FirstWeeklyUpdate")
                        .HasColumnType("date")
                        .HasColumnName("FirstWeeklyUpdate")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("FourthWeeklyUpdate")
                        .HasColumnType("date")
                        .HasColumnName("FourthWeeklyUpdate")
                        .HasColumnOrder(8);

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NextCupMatchDate")
                        .HasColumnType("date")
                        .HasColumnName("NextCupMatchDate")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("NextEconomyUpdate")
                        .HasColumnType("date")
                        .HasColumnName("NextEconomyUpdate")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("NextSeriesMatchDate")
                        .HasColumnType("date")
                        .HasColumnName("NextSeriesMatchDate")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("NextTrainingUpdate")
                        .HasColumnType("date")
                        .HasColumnName("NextTrainingUpdate")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("SecondWeeklyUpdate")
                        .HasColumnType("date")
                        .HasColumnName("SecondWeeklyUpdate")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("ThirdWeeklyUpdate")
                        .HasColumnType("date")
                        .HasColumnName("ThirdWeeklyUpdate")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("LeagueId")
                        .IsUnique();

                    b.ToTable("LeagueCalendar", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.LeagueCup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CurrentRound")
                        .HasColumnType("bigint")
                        .HasColumnName("CurrentRound")
                        .HasColumnOrder(6);

                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnName("HattrickId")
                        .HasColumnOrder(1);

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<long>("LeagueLevel")
                        .HasColumnType("bigint")
                        .HasColumnName("LeagueLevel")
                        .HasColumnOrder(3);

                    b.Property<long>("Level")
                        .HasColumnType("bigint")
                        .HasColumnName("Level")
                        .HasColumnOrder(4);

                    b.Property<long>("LevelIndex")
                        .HasColumnType("bigint")
                        .HasColumnName("LevelIndex")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.Property<long>("RoundsLeft")
                        .HasColumnType("bigint")
                        .HasColumnName("RoundsLeft")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("LeagueCup", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnName("HattrickId")
                        .HasColumnOrder(1);

                    b.Property<int>("SupporterTier")
                        .HasColumnType("int")
                        .HasColumnName("SupporterTier")
                        .HasColumnOrder(3);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("UserName")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Manager", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<long>("HattrickId")
                        .HasColumnType("bigint")
                        .HasColumnName("HattrickId")
                        .HasColumnOrder(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Region", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("TokenCreatedOn")
                        .HasColumnType("date")
                        .HasColumnName("TokenCreatedOn")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("TokenExpiresOn")
                        .HasColumnType("date")
                        .HasColumnName("TokenExpiresOn")
                        .HasColumnOrder(4);

                    b.Property<string>("TokenSecretValue")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("TokenSecretValue")
                        .HasColumnOrder(2);

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("TokenValue")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("Token", (string)null);
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.Country", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Database.League", "League")
                        .WithOne("Country")
                        .HasForeignKey("Hyperar.HPA.Domain.Database.Country", "LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.LeagueCalendar", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Database.League", "League")
                        .WithOne("LeagueCalendar")
                        .HasForeignKey("Hyperar.HPA.Domain.Database.LeagueCalendar", "LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.LeagueCup", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Database.League", "League")
                        .WithMany("Cups")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("League");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.Region", b =>
                {
                    b.HasOne("Hyperar.HPA.Domain.Database.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.Country", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Hyperar.HPA.Domain.Database.League", b =>
                {
                    b.Navigation("Country");

                    b.Navigation("Cups");

                    b.Navigation("LeagueCalendar")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
